# vim: set ft=sh:

fresh freshshell/fresh bin/fresh --bin
for file in ~/.bash_profile ~/.bashrc; do
  fresh shell/noninteractive.sh --file=$file
  fresh shell/path.sh --file=$file
  fresh shell/source-build.sh --file=$file
done

fresh-options --file=~/.bash_logout
  fresh shell/logout/*
fresh-options

fresh 'bin/*' --bin
fresh JonathonMA/junkscripts 'bin/*' --bin
fresh jasoncodes/ctrlp-modified.vim lib/branch.sh --bin
fresh jasoncodes/ctrlp-modified.vim lib/branch_modified.sh --bin
fresh jasoncodes/ctrlp-modified.vim lib/modified.sh --bin

# Shell
fresh shell/noninteractive.sh
fresh 'shell/aliases/*'
fresh 'shell/config/*'
fresh chriskempson/base16-shell scripts/base16-solarized-dark.sh
fresh rcaloras/bash-preexec bash-preexec.sh
fresh 'shell/preexec.sh'

# Config
fresh-options --file
  fresh 'config/*'
  fresh 'private/config/*rc' --ignore-missing
  fresh jasoncodes/dotfiles config/inputrc
fresh-options
fresh garybernhardt/dotfiles .githelpers --file=~/.local/share/git/helpers
fresh seebi/dircolors-solarized dircolors.ansi-dark --file=~/.dircolors

mkdir -p ~/.cache/ ~/.config/ ~/.local/share/
(cd "$FRESH_LOCAL"/xdg/config && find . -type d -exec mkdir -p ~/.config/{} \;)
(cd "$FRESH_LOCAL"/xdg/config && find . -type f -not -name .keep -exec ln -sf "$FRESH_LOCAL"/xdg/config/{} ~/.config/{} \;)
(cd "$FRESH_LOCAL"/xdg/share && find . -type d -exec mkdir -p ~/.local/share/{} \;)
(cd "$FRESH_LOCAL"/xdg/share && find . -type f -not -name .keep -exec ln -sf "$FRESH_LOCAL"/xdg/share/{} ~/.local/share/{} \;)

# Tmux
fresh tmux-plugins/tpm . --file=~/.config/tmux/plugins/tpm/

# NVim

fresh junegunn/vim-plug plug.vim --file=~/.local/share/nvim/site/autoload/plug.vim

fresh-options --file=${XDG_CONFIG_HOME:-$HOME/.config}/nvim/init.vim --marker=\"
# "
  fresh nvim/preamble.vim
  fresh nvim/leader.vim
  fresh nvim/plug_before.vim
  fresh nvim/plug.vim
  fresh 'nvim/plugins/*.vim'
  fresh nvim/plug_after.vim
  fresh nvim/global.vim
  fresh nvim/color.vim
  fresh 'nvim/config/*.vim'
  fresh nvim/mappings.vim
  fresh jasoncodes/dotfiles vim/config/auto_mkdir.vim
  fresh nvim/exrc.vim
fresh-options

# Fonts
fresh powerline/powerline font/PowerlineSymbols.otf --file=~/.local/share/fonts/PowerlineSymbols.otf
fresh powerline/powerline font/10-powerline-symbols.conf --file=~/.config/fontconfig/conf.d/10-powerline-symbols.conf

fresh edwardtufte/et-book et-book-ligatures-enabled/et-book-display-italic-old-style-figures/ETBookOT-Italic.otf --file=~/.local/share/fonts/ETBookOT-Italic.otf
fresh edwardtufte/et-book et-book-ligatures-enabled/et-book-bold-line-figures/ETBookOT-Bold.otf --file=~/.local/share/fonts/ETBookOT-Bold.otf
fresh edwardtufte/et-book et-book-ligatures-enabled/et-book-roman-old-style-figures/ETBookOT-Roman.otf --file=~/.local/share/fonts/ETBookOT-Roman.otf

fresh adobe-fonts/source-code-pro --ref=release OTF/SourceCodePro-BlackIt.otf --file=~/.local/share/fonts/SourceCodePro-BlackIt.otf
fresh adobe-fonts/source-code-pro --ref=release OTF/SourceCodePro-Black.otf --file=~/.local/share/fonts/SourceCodePro-Black.otf
fresh adobe-fonts/source-code-pro --ref=release OTF/SourceCodePro-BoldIt.otf --file=~/.local/share/fonts/SourceCodePro-BoldIt.otf
fresh adobe-fonts/source-code-pro --ref=release OTF/SourceCodePro-Bold.otf --file=~/.local/share/fonts/SourceCodePro-Bold.otf
fresh adobe-fonts/source-code-pro --ref=release OTF/SourceCodePro-ExtraLightIt.otf --file=~/.local/share/fonts/SourceCodePro-ExtraLightIt.otf
fresh adobe-fonts/source-code-pro --ref=release OTF/SourceCodePro-ExtraLight.otf --file=~/.local/share/fonts/SourceCodePro-ExtraLight.otf
fresh adobe-fonts/source-code-pro --ref=release OTF/SourceCodePro-It.otf --file=~/.local/share/fonts/SourceCodePro-It.otf
fresh adobe-fonts/source-code-pro --ref=release OTF/SourceCodePro-LightIt.otf --file=~/.local/share/fonts/SourceCodePro-LightIt.otf
fresh adobe-fonts/source-code-pro --ref=release OTF/SourceCodePro-Light.otf --file=~/.local/share/fonts/SourceCodePro-Light.otf
fresh adobe-fonts/source-code-pro --ref=release OTF/SourceCodePro-MediumIt.otf --file=~/.local/share/fonts/SourceCodePro-MediumIt.otf
fresh adobe-fonts/source-code-pro --ref=release OTF/SourceCodePro-Medium.otf --file=~/.local/share/fonts/SourceCodePro-Medium.otf
fresh adobe-fonts/source-code-pro --ref=release OTF/SourceCodePro-Regular.otf --file=~/.local/share/fonts/SourceCodePro-Regular.otf
fresh adobe-fonts/source-code-pro --ref=release OTF/SourceCodePro-SemiboldIt.otf --file=~/.local/share/fonts/SourceCodePro-SemiboldIt.otf
fresh adobe-fonts/source-code-pro --ref=release OTF/SourceCodePro-Semibold.otf --file=~/.local/share/fonts/SourceCodePro-Semibold.otf
fresh adobe-fonts/source-code-pro --ref=release VAR/SourceCodeVariable-Italic.otf --file=~/.local/share/fonts/SourceCodeVariable-Italic.otf
fresh adobe-fonts/source-code-pro --ref=release VAR/SourceCodeVariable-Roman.otf --file=~/.local/share/fonts/SourceCodeVariable-Roman.otf

# Other config
fresh bltavares/dot-files ctags --file=~/.ctags

# NeoMutt
fresh-options --file=${XDG_CONFIG_HOME:-$HOME/.config}/neomutt/neomuttrc --marker=#
  fresh neomutt/*
  fresh josephholsten/base16-mutt base16.muttrc
  fresh private/config/neomutt/accounts --ignore-missing
fresh-options

# Gitignore
fresh-options --file=${XDG_CONFIG_HOME:-$HOME/.config}/git/ignore --marker=#
  fresh github/gitignore Global/Vim.gitignore
  fresh github/gitignore Global/macOS.gitignore
  fresh github/gitignore Global/Tags.gitignore
fresh-options

# Git aliases
fresh-options --file=${XDG_CONFIG_HOME:-$HOME/.config}/git/config --marker=#
  fresh git/alias_before.gitconfig
  fresh 'git/aliases/*'
  fresh 'git/config/*'
fresh-options

# Private
if [ ! -d ~/.local/share/dotfiles/private -a -d ~/Dropbox/repos/ ]; then
  git clone ~/Dropbox/repos/dotfiles-private ~/.local/share/dotfiles/private
fi

fresh --file=~/.config/git/identity_ennova private/config/git/identity_ennova --ignore-missing

config_git() {
  local config_git_local=${XDG_CONFIG_HOME:-$HOME/.config}/git/local

  mkdir -p "$(dirname "$config_git_local")"

  if [ ! -e "$config_git_local" ]; then
      echo "Configuring local Git settings:"
      read -p "    Enter Git Name: " username
      git config -f "$config_git_local" user.name "$username"
      read -p "    Enter Git Email: " email
      git config -f "$config_git_local" user.email $email
      echo "Configured git settings in "$config_git_local". Not stored in local .dotfiles repo."
  fi
}

config_git

if [ ! -d ~/.local/share/asdf ]; then
  (
    cd ~/.local/share
    mr checkout
  )
fi
