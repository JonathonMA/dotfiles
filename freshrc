# vim: set ft=sh:

fresh freshshell/fresh bin/fresh --bin
for file in ~/.bash_profile ~/.bashrc; do
  fresh shell/noninteractive.sh --file=$file
  fresh shell/path_pre.sh --file=$file
  fresh shell/path.sh --file=$file
  fresh shell/path_post.sh --file=$file
  fresh shell/source-build.sh --file=$file
done

fresh-options --file=~/.bash_logout
  fresh shell/logout/*
fresh-options

fresh 'bin/*' --bin
fresh JonathonMA/junkscripts 'bin/*' --bin
fresh jasoncodes/ctrlp-modified.vim lib/branch.sh --bin
fresh jasoncodes/ctrlp-modified.vim lib/branch_modified.sh --bin
fresh jasoncodes/ctrlp-modified.vim lib/modified.sh --bin

ensure_checkout() {
  local _tmp="$(mktemp)"
  fresh-options --file=$_tmp
  fresh "$@"
  fresh-options

  rm "$_tmp"
}

# Shell
fresh shell/noninteractive.sh
fresh shell/has_command_pre.sh
fresh 'shell/aliases/*'
fresh 'shell/config/*'
fresh shell/has_command_post.sh
fresh rcaloras/bash-preexec bash-preexec.sh
fresh 'shell/preexec.sh'
fresh 'shell/local.sh'
if [ -L "$HOME/.ecryptfs" ]; then
  fresh JonathonMA/mlocate-encrypted-home locate-home.sh
fi

if [ -d ~/.local/share/dotfiles/private ]; then
  fresh 'private/shell/*'
fi

# Config
fresh-options --file
  fresh 'legacy-config/*'
fresh-options
fresh seebi/dircolors-solarized dircolors.ansi-dark --file=~/.config/dircolors

xdg_populate() {
  if [ -d "$FRESH_LOCAL"/"$1" ]; then
    (cd "$FRESH_LOCAL"/"$1" && find . -type d -exec mkdir -p "$2"/{} \;)
    (cd "$FRESH_LOCAL"/"$1" && find . -type f -not -name .keep -exec ln -sf "$FRESH_LOCAL"/"$1"/{} "$2"/{} \;)
  fi
}

xdg_populate_os() {
  if [[ "$OSTYPE" == "darwin"* ]]; then
    xdg_populate macos/"$1" "$2"
  else
    xdg_populate linux/"$1" "$2"
  fi
}

xdg_populate_dir() {
  target="${FRESH_LOCAL}/$1"
  if [ -d "$2" -a ! -L "$2" ]; then
    echo "$2: exists as dir"
    exit 1
  elif [ -L "$2" ]; then
    if [ "$(readlink "$2")" != "$target" ]; then
      echo "$2: exists and is a bad link"
    else
      :
    fi
  else
    mkdir -p "$(dirname "$2")"
    ln -s "$target" "$2"
  fi
}

mkdir -p ~/.cache/ ~/.config/ ~/.local/share/
xdg_populate config ~/.config
xdg_populate data ~/.local/share
xdg_populate_os config ~/.config
xdg_populate private/data ~/.local/share
xdg_populate private/config ~/.config
xdg_populate_dir nvim/plugins ~/.config/nvim/lua/plugins
xdg_populate_dir nvim/lib ~/.config/nvim/lua/lib

# NOTE: fake a kind of global biome config, without polluting home too much.
ln -sf ~/.config/biome.json ~/.local/biome.json
ln -sf ~/.config/biome.json ~/src/biome.json

# Tmux
fresh tmux-plugins/tpm . --file=~/.config/tmux/plugins/tpm/

# NVim
nvim_path="${XDG_CONFIG_HOME:-$HOME/.config}/nvim"

fresh-options --file="${nvim_path}/init.lua" --marker='--'
  fresh 'nvim/init/*.lua'
fresh-options

fresh-options --file="${nvim_path}/preinit.vim" --marker='"'
  fresh 'nvim/preinit/*.vim'
fresh-options

fresh-options --file="${nvim_path}/lua/vim/preinit.lua" --marker='--'
  fresh 'nvim/preinit/*.lua'
fresh-options

fresh-options --file="${nvim_path}/config.vim" --marker='"'
  fresh 'nvim/config/*.vim'
  fresh jasoncodes/dotfiles vim/config/auto_mkdir.vim
fresh-options

fresh-options --file="${nvim_path}/lua/vim/config.lua" --marker='--'
  fresh 'nvim/config/*.lua'
fresh-options

# More XCompose sequences
fresh kragen/xcompose dotXCompose --file=~/.config/X11/xcompose

# Other config

# NeoMutt
fresh-options --file=${XDG_CONFIG_HOME:-$HOME/.config}/neomutt/neomuttrc --marker=#
  fresh neomutt/*
  fresh josephholsten/base16-mutt base16.muttrc
  fresh private/config/neomutt/accounts --ignore-missing
fresh-options

# Gitignore
fresh-options --file=${XDG_CONFIG_HOME:-$HOME/.config}/git/ignore --marker=#
  fresh github/gitignore Global/Vim.gitignore
  fresh github/gitignore Global/macOS.gitignore
  fresh github/gitignore Global/Tags.gitignore
fresh-options

# Git aliases
fresh-options --file=${XDG_CONFIG_HOME:-$HOME/.config}/git/config --marker=#
  fresh git/alias_before.gitconfig
  fresh 'git/aliases/*'
  fresh 'git/config/*'
fresh-options

# fresh JonathonMA/idemfontent idemfontent --bin
# Manage fonts
command -v idemfontent >/dev/null && idemfontent --regenerate-fontconfig

# Private
if [ ! -d ~/.local/share/dotfiles/private ]; then
  git clone git@github.com:JonathonMA/jma-dotfiles-private.git ~/.local/share/dotfiles/private
fi

config_git() {
  local config_git_local=${XDG_CONFIG_HOME:-$HOME/.config}/git/local

  mkdir -p "$(dirname "$config_git_local")"

  if [ ! -e "$config_git_local" ]; then
      echo "Configuring local Git settings:"
      read -p "    Enter Git Name: " username
      git config -f "$config_git_local" user.name "$username"
      read -p "    Enter Git Email: " email
      git config -f "$config_git_local" user.email $email
      echo "Configured git settings in "$config_git_local". Not stored in local .dotfiles repo."
  fi
}

config_git
